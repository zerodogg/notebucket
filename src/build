#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);
use File::Copy qw(copy);
use Text::Markdown qw(markdown);
use Cwd qw(getcwd);
use utf8;

my $out = '';
my $subjects = '<li><a class="categoryFilter" href="#all">All</a></li>';

my @categories;
foreach my $category (<*>)
{
	next if ! -d $category;
	next if $category =~ /(src|build|Various)$/;
	push(@categories,$category);
}

push(@categories,getcwd.'/Various');

foreach my $category (@categories)
{
	next if ! -d $category;
	next if $category =~ /(src|build)$/;

	my $cName = basename($category);
	$cName =~ s{-slash-}{/}g;
	$cName =~ s/_/ /g;
	my $catContent = '';

	foreach my $noteF (glob($category.'/*'))
	{
		my ($title,$note);
		next if $noteF =~ /~$/;
		open(my $i,'<',$noteF) or die('Failed to open '.$noteF.': '.$!."\n");

		while(<$i>)
		{
			if (!$title)
			{
				chomp;
				$title = $_;
			}
			elsif(/^\s*$/ && (!defined($note) || !length($note)))
			{
				next;
			}
			else
			{
				$note .= $_;
			}
		}
		close($i);
		next if not length($title);
		next if not length($note);
		$catContent .= '<div class="note" data-entry="'.basename($noteF).'">';
		$catContent .= '<div class="title">'.$title.'</div>';
		$catContent .= '<div class="content">'.markdown($note).'</div>';
		$catContent .= '</div>';
	}
	next if not length($catContent);
	next if not length($cName);

	my $baseN = basename($category);
	$baseN =~ s/(\(|\))/-/g;
	$out .= '<div class="section" id="'.$baseN.'">';
	$out .= '<div class="catTitle">'.$cName.'</div>';
	$out .= '<div class="category">'.$catContent.'</div>';
	$out .= '</div>';

	$subjects .= '<li><a class="categoryFilter" href="#'.$baseN.'">'.$cName.'</a></li>';
}

my $final;

open(my $o,'<','./src/template.html');
undef $/;
$final = <$o>;
close($o);
$final =~ s/^\s+/ /gm;
$final =~ s/\n/ /g;
$final =~ s/\s+/ /g;
$final =~ s/>\s*/>\n/;

{
    open(my $in,'-|',qw/git log --all/,'--format=%h %ai','-n',1);
    my $data = <$in>;
    close($in);
    chomp($data);
    $data =~ s/\s+$//;

    (my $rev = $data) =~ s/^(\S+)\s.*/$1/;
    (my $date = $data) =~ s/^\S+\s+//;
    $final =~ s/{{GITREV}}/$rev/g;
    $final =~ s/{{GITDATE}}/$date/g;
}

$final =~ s/\s*{{CONTENT}}\s*/$out/;
$final =~ s/\s*{{SUBJECTS}}\s*/$subjects/;
open(my $oF,'>','./notes.html');
print {$oF} $final;
close($oF);

copy('./src/notes.css','./');
copy('./src/notes.js','./');
